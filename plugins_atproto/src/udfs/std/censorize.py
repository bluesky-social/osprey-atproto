import re
import unicodedata
from typing import Dict, List

from osprey.engine.executor.execution_context import ExecutionContext
from osprey.engine.udf.arguments import ArgumentsBase
from osprey.engine.udf.base import UDFBase

# a collection of lookalike characters that we have found useful (and have been used in the wild during e.g. raids)
lookalikes = {
    'a': [
        '𝝰',
        'a',
        'ａ',
        '𝑎',
        '𝗮',
        '𝕒',
        '𝖆',
        '𝓪',
        '𝚊',
        '𝞪',
        'а',
        'ɑ',
        'α',
        '𝔞',
        '𝒂',
        '𝘢',
        '𝛂',
        '⍺',
        '𝒶',
        '𝙖',
        '𝜶',
        '𝛼',
        '𝐚',
        '𝖺',
        '𝙰',
        'A',
        '𝐴',
        'ᗅ',
        '𝑨',
        '𝚨',
        '𝕬',
        '𝖠',
        'А',
        'Α',
        '𝛢',
        '𝝖',
        '𝒜',
        '𝜜',
        '𖽀',
        '𝓐',
        '𝞐',
        'Ａ',
        '𝗔',
        '𝘈',
        'Ꭺ',
        'ꓮ',
        '𝐀',
        '𝔄',
        '𝔸',
        '𐊠',
        '𝘼',
        'a',
        'а',
        'ạ',
        'ą',
        'ä',
        'à',
        'á',
        'ą',
        '4',
        '@',
        '^',
        'α',
        'а',
        'x',
        '*',
        '_',
        '-',
    ],
    'b': [
        '𝑏',
        '𝗯',
        'b',
        'Ƅ',
        '𝕓',
        '𝖇',
        'Ь',
        '𝓫',
        '𝚋',
        'Ꮟ',
        'ᖯ',
        '𝔟',
        'ᑲ',
        '𝒃',
        '𝘣',
        '𝒷',
        '𝙗',
        '𝐛',
        '𝖻',
        'B',
        '𝕭',
        '𝙱',
        '𝑩',
        '𝚩',
        'ꓐ',
        'Β',
        'В',
        '𝜝',
        '𝛣',
        '𝖡',
        '𝝗',
        '𐊂',
        '𐌁',
        '𝗕',
        'Ｂ',
        '𝓑',
        '𝞑',
        '𝔅',
        'ℬ',
        '𝘉',
        '𝘽',
        'Ꞵ',
        'Ᏼ',
        '𝐁',
        'ᗷ',
        '𐊡',
        '𝐵',
        '𝔹',
        'b',
        '8',
    ],
    'c': [
        '𝑐',
        '𝗰',
        'с',
        'c',
        'ｃ',
        '𝕔',
        'ᴄ',
        'ⲥ',
        '𐐽',
        '𝖈',
        '𝓬',
        '𝚌',
        'ꮯ',
        '𝔠',
        'ϲ',
        '𝒄',
        '𝘤',
        '𝒸',
        '𝙘',
        '𝐜',
        '𝖼',
        'ⅽ',
        'ℂ',
        '𝕮',
        'C',
        '𝙲',
        '𝑪',
        '𝒞',
        '𝖢',
        '𐌂',
        '𝗖',
        'ꓚ',
        'Ꮯ',
        '𐔜',
        'С',
        'Ｃ',
        'Ⲥ',
        '𝓒',
        'Ⅽ',
        'ℭ',
        '𝘊',
        '𐐕',
        '𝘾',
        '🝌',
        '𝐂',
        '𑣲',
        '𑣩',
        'Ϲ',
        '𐊢',
        '𝐶',
        'c',
        'с',
        'ƈ',
        'ċ',
        '(',
        '<',
        '©',
        'k',
        '[',
        '{',
    ],
    'd': [
        'ԁ',
        '𝓭',
        '𝚍',
        'd',
        'ⅆ',
        '𝑑',
        '𝗱',
        'Ꮷ',
        '𝒅',
        '𝘥',
        '𝖉',
        'ᑯ',
        'ꓒ',
        '𝐝',
        '𝖽',
        '𝔡',
        '𝕕',
        'ⅾ',
        '𝒹',
        '𝙙',
        'Ꭰ',
        '𝕯',
        'D',
        'ⅅ',
        '𝓓',
        '𝙳',
        '𝔇',
        'ᗪ',
        '𝑫',
        '𝘋',
        'Ⅾ',
        '𝒟',
        '𝘿',
        'ꓓ',
        '𝐃',
        '𝖣',
        '𝐷',
        '𝗗',
        '𝔻',
        'ᗞ',
        'd',
        'ԁ',
        'ɗ',
    ],
    'e': [
        '𝓮',
        '𝚎',
        'e',
        'ｅ',
        '𝑒',
        '𝗲',
        'ⅇ',
        '𝒆',
        '𝘦',
        '℮',
        '𝖊',
        'ℯ',
        '𝐞',
        '𝖾',
        'ꬲ',
        'е',
        '𝔢',
        '𝕖',
        'ҽ',
        '𝙚',
        '𝕰',
        '𝙴',
        'E',
        '𝛦',
        '𝑬',
        '𝚬',
        '𝜠',
        '𝖤',
        'Ε',
        'Е',
        '𝗘',
        '𐊆',
        '𝝚',
        '𝓔',
        '𝞔',
        'Ｅ',
        '𝔈',
        '𝘌',
        'Ꭼ',
        'ℰ',
        '𝙀',
        'ꓰ',
        '𑢮',
        '𝐄',
        '𝐸',
        'ⴹ',
        '𑢦',
        '𝔼',
        '⋿',
        'e',
        'е',
        'ẹ',
        'ė',
        'é',
        'è',
        '3',
        '€',
        'є',
        '∑',
        'x',
        '*',
        '_',
        '-',
    ],
    'f': [
        '𝓯',
        '𝚏',
        'ք',
        '𝑓',
        '𝗳',
        'f',
        '𝒇',
        '𝘧',
        '𝖋',
        '𝐟',
        '𝖿',
        '𝔣',
        'ꬵ',
        '𝕗',
        'ꞙ',
        '𝒻',
        '𝙛',
        'ẝ',
        'ſ',
        '𝑭',
        '𝈓',
        'F',
        '𝕱',
        '𑢢',
        '𝖥',
        'Ꞙ',
        '𝓕',
        'Ϝ',
        '𐊇',
        'ꓝ',
        '𝗙',
        '𐔥',
        '𝘍',
        '𑣂',
        '𝐅',
        '𝟊',
        '𝔉',
        'ℱ',
        '𝔽',
        'ᖴ',
        '𝙁',
        '𝙵',
        '𐊥',
        '𝐹',
        'f',
    ],
    'g': [
        '𝓰',
        '𝚐',
        'ɡ',
        'ց',
        'ᶃ',
        '𝑔',
        '𝗴',
        'g',
        'ｇ',
        '𝒈',
        '𝘨',
        'ℊ',
        '𝖌',
        'ƍ',
        '𝐠',
        '𝗀',
        '𝔤',
        '𝕘',
        '𝙜',
        'Ꮐ',
        '𝑮',
        '𝘎',
        '𝕲',
        'G',
        '𝐆',
        '𝖦',
        'Ԍ',
        '𝔊',
        '𝔾',
        'Ᏻ',
        '𝒢',
        '𝙂',
        'ꓖ',
        '𝓖',
        '𝙶',
        '𝐺',
        '𝗚',
        'g',
        'ġ',
        'q',
        '9',
        '6',
        '&',
        '©',
    ],
    'h': [
        'Ꮒ',
        '𝖍',
        '𝓱',
        '𝚑',
        'h',
        'ｈ',
        '𝔥',
        'ℎ',
        '𝒉',
        '𝘩',
        'հ',
        '𝒽',
        '𝙝',
        '𝐡',
        '𝗁',
        '𝗵',
        'һ',
        '𝕙',
        '𝑯',
        '𝚮',
        '𝕳',
        'H',
        '𝛨',
        '𝖧',
        'ℋ',
        'ℌ',
        'ℍ',
        'Ⲏ',
        '𐋏',
        '𝜢',
        'Η',
        '𝓗',
        '𝞖',
        '𝝜',
        '𝗛',
        'Н',
        '𝘏',
        'ꓧ',
        'Ｈ',
        '𝐇',
        '𝙃',
        '𝙷',
        'Ꮋ',
        'ᕼ',
        '𝐻',
        'h',
        'һ',
        '#',
    ],
    'i': [
        '𝓲',
        '𝞲',
        'ꙇ',
        'ⅈ',
        'ｉ',
        '𝔦',
        '𝘪',
        'ӏ',
        '𝙞',
        '𝚤',
        '𝐢',
        'і',
        '𝑖',
        '˛',
        '𝕚',
        '𝖎',
        'Ꭵ',
        '𝚒',
        '𑣃',
        'i',
        'ɩ',
        'ɪ',
        '𝒊',
        '𝛊',
        'ⅰ',
        'ı',
        '𝒾',
        '𝜾',
        '⍳',
        '𝜄',
        'ꭵ',
        '𝗂',
        '𝝸',
        'ℹ',
        'ι',
        '𝗶',
        'ͺ',
        '𝚰',
        '𝘭',
        'І',
        '𝖨',
        '𝐥',
        'ﺍ',
        'ﺎ',
        '𝔩',
        'ℐ',
        'ℑ',
        '𐊊',
        'Ⲓ',
        '𐌉',
        'ℓ',
        '𝜤',
        'Ɩ',
        '𝞘',
        'Ι',
        '𝚕',
        '𝟏',
        '∣',
        'ا',
        'Ｉ',
        '𝗅',
        '𝕀',
        '1',
        '𝙄',
        '𝓁',
        '𐌠',
        '𝐼',
        '𞸀',
        '𞺀',
        '׀',
        '𝑰',
        'ǀ',
        'Ӏ',
        'ᛁ',
        '𝟭',
        '𝕴',
        'I',
        'ߊ',
        'ｌ',
        '𝛪',
        'ⵏ',
        '𝝞',
        '𝕝',
        '𝟣',
        'ו',
        '𞣇',
        '𝙡',
        '𝓘',
        '𝗜',
        '𝟙',
        '𝑙',
        'ן',
        'Ⅰ',
        '𝘐',
        '١',
        '𝒍',
        '𝖑',
        '￨',
        '🯱',
        '𝐈',
        'l',
        '۱',
        'ꓲ',
        '𖼨',
        '𝙸',
        '𝟷',
        '𝓵',
        '|',
        'ⅼ',
        '⏽',
        '𝗹',
        'i',
        'і',
        'í',
        'ï',
        '1',
        '!',
        'l',
        'x',
        '|',
        '∫',
        '*',
        '_',
        '-',
    ],
    'j': [
        '𝖏',
        '𝓳',
        '𝚓',
        'ⅉ',
        '𝔧',
        'j',
        'ｊ',
        '𝒋',
        '𝘫',
        '𝒿',
        '𝙟',
        'ϳ',
        '𝐣',
        '𝗃',
        'ј',
        '𝑗',
        '𝗷',
        '𝕛',
        '𝔍',
        '𝑱',
        '𝘑',
        'Ј',
        'J',
        'Ｊ',
        '𝒥',
        '𝙅',
        'Ꭻ',
        'ᒍ',
        '𝐉',
        '𝖩',
        'Ʝ',
        '𝐽',
        '𝗝',
        '𝕁',
        'ꓙ',
        '𝕵',
        '𝓙',
        '𝙹',
        'Ϳ',
        'j',
        'ј',
        'ʝ',
    ],
    'k': [
        '𝖐',
        '𝓴',
        '𝚔',
        '𝔨',
        'k',
        '𝒌',
        '𝘬',
        '𝓀',
        '𝙠',
        '𝐤',
        '𝗄',
        '𝑘',
        '𝗸',
        '𝕜',
        '𝑲',
        '𝚱',
        '𝒦',
        'K',
        '𝜥',
        '𝛫',
        '𝖪',
        '𝝟',
        '𝗞',
        'Ⲕ',
        'ᛕ',
        'ꓗ',
        'Κ',
        'К',
        '𝓚',
        '𝞙',
        '𝔎',
        '𝘒',
        'Ꮶ',
        '𝙆',
        'Ｋ',
        '𐔘',
        '𝐊',
        '𝐾',
        '𝕂',
        '𝕶',
        '𝙺',
        'k',
        'κ',
        'c',
        '<',
        '[',
        '{',
        '©',
    ],
    'l': [
        '𝚰',
        '𝘭',
        'І',
        '𝖨',
        '𝐥',
        'ﺍ',
        'ﺎ',
        '𝔩',
        'ℐ',
        'ℑ',
        '𐊊',
        'Ⲓ',
        '𐌉',
        'ℓ',
        '𝜤',
        'Ɩ',
        '𝞘',
        'Ι',
        '𝚕',
        '𝟏',
        '∣',
        'ا',
        'Ｉ',
        '𝗅',
        '𝕀',
        '1',
        '𝙄',
        '𝓁',
        '𐌠',
        '𝐼',
        '𞸀',
        '𞺀',
        '׀',
        '𝑰',
        'ǀ',
        'Ӏ',
        'ᛁ',
        '𝟭',
        '𝕴',
        'I',
        'ߊ',
        'ｌ',
        '𝛪',
        'ⵏ',
        '𝝞',
        '𝕝',
        '𝟣',
        'ו',
        '𞣇',
        '𝙡',
        '𝓘',
        '𝗜',
        '𝟙',
        '𝑙',
        'ן',
        'Ⅰ',
        '𝘐',
        '١',
        '𝒍',
        '𝖑',
        '￨',
        '🯱',
        '𝐈',
        'l',
        '۱',
        'ꓲ',
        '𖼨',
        '𝙸',
        '𝟷',
        '𝓵',
        '|',
        'ⅼ',
        '⏽',
        '𝗹',
        '𖼖',
        '𝑳',
        '𑢣',
        'L',
        '𝖫',
        'Ⳑ',
        '𝗟',
        'ℒ',
        '𝓛',
        'Ꮮ',
        '𐔦',
        '𝔏',
        'ꓡ',
        '𐐛',
        '𝘓',
        '𝙇',
        'ᒪ',
        'Ⅼ',
        '𝈪',
        '𝐋',
        '𝐿',
        '𝕃',
        '𑢲',
        '𝕷',
        '𝙻',
        'l',
        'ӏ',
        'ḷ',
        'i',
        '1',
        '!',
        'l',
        'x',
        '|',
        '∫',
        '*',
        '_',
        '-',
    ],
    'm': [
        '𑜀',
        '𝒎',
        '𝘮',
        '𑣣',
        '𝖒',
        '𝐦',
        '𝗆',
        'm',
        '𝔪',
        '𝕞',
        '𝓂',
        '𝙢',
        '𝓶',
        '𝚖',
        'rn',
        '𝑚',
        '𝗺',
        'ⅿ',
        '𝛭',
        '𝑴',
        '𝚳',
        '𝜧',
        '𐌑',
        '𝖬',
        'M',
        '𝗠',
        'ᛖ',
        '𝝡',
        'Ⲙ',
        '𝓜',
        'Μ',
        'М',
        '𝞛',
        'ꓟ',
        '𝔐',
        '𝘔',
        '𝙈',
        '𐊰',
        '𝐌',
        'Ｍ',
        'Ⅿ',
        '𝑀',
        'ᗰ',
        'ℳ',
        '𝕄',
        'Ꮇ',
        '𝕸',
        'Ϻ',
        '𝙼',
        'm',
    ],
    'n': [
        '𝒏',
        '𝘯',
        '𝖓',
        '𝐧',
        '𝗇',
        '𝔫',
        'n',
        '𝕟',
        '𝓃',
        '𝙣',
        'ո',
        '𝓷',
        '𝚗',
        'ռ',
        '𝑛',
        '𝗻',
        'ꓠ',
        '𝛮',
        '𝐍',
        '𝖭',
        '𝚴',
        '𝔑',
        '𝜨',
        '𐔓',
        'N',
        'Ｎ',
        '𝒩',
        '𝙉',
        '𝓝',
        '𝙽',
        'ℕ',
        '𝝢',
        '𝑁',
        '𝗡',
        'Ⲛ',
        '𝑵',
        '𝘕',
        '𝞜',
        'Ν',
        '𝕹',
        'n',
        'ո',
    ],
    'o': [
        '𝘰',
        'ం',
        'ಂ',
        'ം',
        'ං',
        'օ',
        '𝐨',
        '𑣗',
        '𝔬',
        'ᴏ',
        'ᴑ',
        '𞹤',
        '𐓪',
        '𝚘',
        '𑣈',
        'ဝ',
        'ⲟ',
        '𝛐',
        'ഠ',
        '𝛔',
        'ﮦ',
        'ﮧ',
        '𝗈',
        '𝝈',
        'ﮨ',
        'ﮩ',
        'ﮪ',
        'ﮫ',
        'ﮬ',
        'ﮭ',
        '𞺄',
        'ℴ',
        '𝝄',
        '𝞸',
        '𝞼',
        'ꬽ',
        'о',
        'ھ',
        'ο',
        '၀',
        'ہ',
        'σ',
        'ه',
        'ｏ',
        '๐',
        '໐',
        '𝕠',
        '𐐬',
        '𞸤',
        '𝙤',
        'ە',
        '𝑜',
        '𝒐',
        'ס',
        '𝜎',
        '𝖔',
        '٥',
        '०',
        '੦',
        '૦',
        '௦',
        '౦',
        '೦',
        '൦',
        'ﻩ',
        'ﻪ',
        'ﻫ',
        'ﻬ',
        '𝜊',
        'o',
        '𝝾',
        '۵',
        '𝞂',
        '𝓸',
        '𝗼',
        'ჿ',
        '߀',
        '𝛰',
        '𑣠',
        '𝖮',
        '〇',
        '𐊒',
        '𝟬',
        '𝒪',
        '𝜪',
        'O',
        'ዐ',
        '𝓞',
        '𝞞',
        '𝝤',
        'ⵔ',
        'Օ',
        '𝟢',
        '𝗢',
        '𝟘',
        '𝘖',
        'Ⲟ',
        'О',
        'Ο',
        'ଠ',
        '𝟎',
        '𝐎',
        '০',
        '୦',
        '𝔒',
        '🯰',
        '𝕆',
        '𝙊',
        '𐔖',
        'Ｏ',
        '0',
        '𑓐',
        '𐊫',
        '𝙾',
        'ꓳ',
        '𑢵',
        '𝑂',
        '𐐄',
        '𝟶',
        '𝑶',
        '𝚶',
        '𐓂',
        '𝕺',
        'o',
        'о',
        'ο',
        'օ',
        'ȯ',
        'ọ',
        'ỏ',
        'ơ',
        'ó',
        'ò',
        'ö',
        '0',
        '*',
        '_',
        '-',
    ],
    'p': [
        'р',
        'ρ',
        '𝔭',
        '𝘱',
        '𝙥',
        '𝐩',
        'ｐ',
        '𝛠',
        '𝑝',
        '𝕡',
        '𝖕',
        '𝜚',
        '𝚙',
        '𝞎',
        'ⲣ',
        '𝝔',
        '𝛒',
        '𝒑',
        '𝟈',
        '𝝆',
        '𝓅',
        '𝜌',
        '𝗉',
        'p',
        '𝞀',
        'ϱ',
        '𝗽',
        '⍴',
        '𝞺',
        '𝓹',
        '𝖯',
        '𝛲',
        '𝝦',
        '𝜬',
        '𝒫',
        '𐊕',
        'P',
        '𝞠',
        '𝓟',
        'ꓑ',
        '𝗣',
        'ℙ',
        '𝘗',
        'Р',
        '𝐏',
        'Ρ',
        'Ⲣ',
        'Ꮲ',
        '𝔓',
        '𝙋',
        'ᑭ',
        'Ｐ',
        '𝙿',
        '𝑃',
        '𝚸',
        '𝑷',
        '𝕻',
        'p',
        'р',
    ],
    'q': [
        '𝔮',
        'գ',
        '𝒒',
        '𝘲',
        'զ',
        '𝓆',
        '𝙦',
        '𝐪',
        '𝗊',
        'q',
        '𝑞',
        '𝗾',
        '𝕢',
        '𝖖',
        'ԛ',
        '𝓺',
        '𝚚',
        '𝐐',
        '𝖰',
        '𝔔',
        '𝒬',
        '𝙌',
        '𝓠',
        '𝚀',
        'Q',
        '𝑄',
        '𝗤',
        'ⵕ',
        '𝑸',
        '𝘘',
        'ℚ',
        '𝕼',
        'q',
        'զ',
    ],
    'r': [
        '𝔯',
        'ꮁ',
        '𝒓',
        '𝘳',
        'ⲅ',
        'ᴦ',
        'ꭇ',
        'ꭈ',
        '𝓇',
        '𝙧',
        '𝐫',
        '𝗋',
        '𝑟',
        '𝗿',
        'r',
        'г',
        '𝕣',
        '𝖗',
        '𝓻',
        '𝚛',
        'Ꭱ',
        '𖼵',
        '𝙍',
        'ꓣ',
        'Ʀ',
        '𝐑',
        '𝖱',
        'ᖇ',
        '𐒴',
        '𝑅',
        '𝗥',
        'R',
        'Ꮢ',
        '𝕽',
        '𝓡',
        '𝚁',
        '𝈖',
        'ℛ',
        'ℜ',
        'ℝ',
        '𝑹',
        '𝘙',
        'r',
        'Я',
    ],
    's': [
        '𝔰',
        '𑣁',
        '𝒔',
        '𝘴',
        '𝓈',
        '𝙨',
        'ꮪ',
        '𝐬',
        '𝗌',
        '𝑠',
        '𝘀',
        'ꜱ',
        's',
        'ｓ',
        '𝕤',
        'ѕ',
        '𝖘',
        '𝓼',
        '𝚜',
        '𐑈',
        'ƽ',
        '𝒮',
        '𝙎',
        'ꓢ',
        '𖼺',
        '𐐠',
        'Ѕ',
        '𝐒',
        '𝖲',
        '𝑆',
        '𝗦',
        '𐊖',
        '𝕊',
        'Տ',
        '𝕾',
        'S',
        'Ｓ',
        'Ꮥ',
        '𝓢',
        '𝚂',
        '𝔖',
        'Ꮪ',
        '𝑺',
        '𝘚',
        's',
        'ʂ',
        '5',
        '$',
        'z',
        '§',
        '2',
        'ś',
    ],
    't': [
        '𝐭',
        '𝗍',
        '𝔱',
        '𝕥',
        '𝓉',
        '𝙩',
        '𝓽',
        '𝚝',
        't',
        '𝑡',
        '𝘁',
        '𝒕',
        '𝘵',
        '𝖙',
        '𝒯',
        '𝜯',
        '𝖳',
        '𝗧',
        '𐊗',
        '𐌕',
        '𝝩',
        '🝨',
        'T',
        'ꓔ',
        '𖼊',
        '𝓣',
        '𝞣',
        '⟙',
        '𝔗',
        '𝘛',
        '𝙏',
        'Т',
        'Ꭲ',
        '⊤',
        'Τ',
        '𝐓',
        'Ⲧ',
        '𝑇',
        '𐊱',
        '𝕋',
        '𑢼',
        '𝕿',
        'Ｔ',
        '𝚃',
        '𝛵',
        '𝑻',
        '𝚻',
        't',
        '7',
        '+',
        '†',
    ],
    'u': [
        '𝐮',
        'υ',
        '𝔲',
        '𑣘',
        '𝕦',
        'ʋ',
        '𝙪',
        'ꭎ',
        '𐓶',
        '𝚞',
        'ꭒ',
        '𝑢',
        '𝒖',
        '𝛖',
        'ᴜ',
        '𝖚',
        'ꞟ',
        '𝜐',
        '𝗎',
        '𝓊',
        '𝝊',
        '𝓾',
        '𝞾',
        '𝞄',
        'u',
        '𝘂',
        '𝘶',
        'ս',
        '𝒰',
        '𝙐',
        'ሀ',
        '⋃',
        '𝐔',
        '𝖴',
        '𝑈',
        '𝗨',
        '𑢸',
        '∪',
        '𝕌',
        'ᑌ',
        'Ս',
        '𝖀',
        '𝓤',
        '𝚄',
        'ꓴ',
        'U',
        '𐓎',
        '𝔘',
        '𝑼',
        '𝘜',
        '𖽂',
        'u',
        'υ',
        'ս',
        'ü',
        'ú',
        'ù',
        'v',
        'µ',
        'x',
        '*',
        '_',
        '-',
    ],
    'v': [
        '⋁',
        '𝐯',
        '𝔳',
        '𝕧',
        '𝙫',
        '𝚟',
        '𝑣',
        'ｖ',
        'ט',
        '𝒗',
        '𝖛',
        'ᴠ',
        '𝗏',
        '𑣀',
        '𝛎',
        '∨',
        '𝜈',
        'ꮩ',
        '𝓋',
        '𝓿',
        'ⅴ',
        '𝘃',
        'ѵ',
        'v',
        '𝝂',
        '𝘷',
        '𝞶',
        '𑜆',
        '𝝼',
        'ν',
        '𑢠',
        '𝈍',
        '𝒱',
        '𝓥',
        '𝗩',
        '𝘝',
        'V',
        '𖼈',
        'Ꮩ',
        '𝐕',
        '𝔙',
        'ꛟ',
        '𝕍',
        'Ⅴ',
        'ꓦ',
        '٧',
        '𝙑',
        '𐔝',
        '𝚅',
        '𝑉',
        'ᐯ',
        '𝑽',
        'Ѵ',
        '۷',
        '𝖁',
        'ⴸ',
        '𝖵',
        'v',
        'ν',
        'ѵ',
        'u',
    ],
    'w': [
        '𝐰',
        '𝗐',
        'ᴡ',
        'ѡ',
        'ա',
        'ꮃ',
        '𝔴',
        '𝕨',
        '𝓌',
        '𝙬',
        'ɯ',
        '𝔀',
        '𝚠',
        '𑜏',
        '𑜎',
        '𝑤',
        '𝘄',
        'w',
        '𝒘',
        '𝘸',
        '𝖜',
        'ԝ',
        '𑜊',
        '𝕎',
        '𝒲',
        '𝙒',
        '𝓦',
        '𝚆',
        'ꓪ',
        '𝑊',
        '𝗪',
        '𑣯',
        '𝑾',
        '𝘞',
        'Ꮃ',
        'Ꮤ',
        '𝖂',
        'W',
        '𝐖',
        '𝖶',
        '𑣦',
        'Ԝ',
        '𝔚',
        'w',
    ],
    'x': [
        'ᕁ',
        '𝓍',
        '𝙭',
        'х',
        '𝐱',
        '𝗑',
        '⤫',
        '𝑥',
        '𝘅',
        '⤬',
        '᙮',
        '⨯',
        '𝕩',
        '𝖝',
        '×',
        '𝔁',
        '𝚡',
        'x',
        'ｘ',
        'ⅹ',
        '𝔵',
        'ᕽ',
        '𝒙',
        '𝘹',
        '𝒳',
        '𝜲',
        '𝓧',
        '𝞦',
        '𐊐',
        '𝝬',
        '𐌗',
        '𝗫',
        '𝘟',
        'X',
        '𝐗',
        '𝔛',
        'ⵝ',
        '𐔧',
        '𝕏',
        '𝙓',
        'Х',
        'Χ',
        'Ⅹ',
        '𝚇',
        'ꓫ',
        'Ⲭ',
        '᙭',
        '𝑋',
        '𐊴',
        '𝑿',
        '𝚾',
        '╳',
        'Ꭓ',
        '𝖃',
        'ᚷ',
        'Ｘ',
        '𝛸',
        '𐌢',
        '𝖷',
        '𑣬',
        'x',
        'х',
        'ҳ',
        '×',
        'X',
    ],
    'y': [
        '𝙮',
        'у',
        '𝐲',
        '𝝲',
        '𝑦',
        'ᶌ',
        '𝞬',
        '𑣜',
        '𝕪',
        'ʏ',
        '𝖞',
        '𝚢',
        'ｙ',
        'ꭚ',
        '𝒚',
        '𝓎',
        'ɣ',
        '𝗒',
        'ყ',
        '𝘆',
        'ү',
        '𝛾',
        'γ',
        '𝛄',
        '𝔂',
        '𝜸',
        'y',
        '𝔶',
        'ℽ',
        '𝘺',
        'ỿ',
        '𝜰',
        '𝒴',
        '𑢤',
        '𝓨',
        '𝗬',
        '𝝪',
        '𝘠',
        'ϒ',
        '𖽃',
        '𝞤',
        '𝐘',
        'Y',
        '𝔜',
        '𝕐',
        'У',
        '𝙔',
        'Υ',
        '𝚈',
        'Ⲩ',
        'Ꭹ',
        '𐊲',
        '𝑌',
        'ꓬ',
        'Ү',
        '𝒀',
        '𝖄',
        '𝖸',
        'Ｙ',
        '𝛶',
        '𝚼',
        'Ꮍ',
        'y',
        'у',
        'ý',
        '¥',
        'λ',
        'ʎ',
    ],
    'z': [
        '𝓏',
        '𝙯',
        'ᴢ',
        '𝐳',
        '𝗓',
        '𑣄',
        '𝑧',
        '𝘇',
        '𝕫',
        '𝖟',
        'ꮓ',
        '𝔃',
        '𝚣',
        '𝔷',
        'z',
        '𝒛',
        '𝘻',
        '𝗭',
        '𝚭',
        'Ꮓ',
        '𑣥',
        '𝛧',
        '𝓩',
        'Ζ',
        '𝘡',
        '𝜡',
        'Z',
        '𝙕',
        '𝞕',
        'ꓜ',
        '𝝛',
        '𝐙',
        '𝑍',
        'ℤ',
        'ℨ',
        '𝖅',
        '𐋵',
        '𝚉',
        '𝒁',
        '𑢩',
        'Ｚ',
        '𝒵',
        '𝖹',
        'z',
        'ʐ',
        'ż',
        '2',
        '≥',
        's',
        'ζ',
    ],
    '.': ['.'],
    ' ': [' '],
    "'": ["'"],
    '"': ['"'],
    '@': ['@'],
    '/': ['/'],
}


def censorize(tok: str, char_set: Dict[str, List[str]] = lookalikes) -> List[str]:
    """Generate all variations of a token based on character replacements."""
    tok_variations = ['']

    for char in tok:
        char_variations = char_set.get(char)
        # if there wasn't one, just use the char itself
        if char_variations is None:
            char_variations = [char]

        new_tok_variations: List[str] = []
        for tok_variation in tok_variations:
            for char_variation in char_variations:
                new_tok_variations.append(tok_variation + char_variation)
        tok_variations = new_tok_variations

    return tok_variations


def create_censorize_regex(
    tok: str,
    include_plural: bool,
    include_substrings: bool,
    char_set: Dict[str, List[str]],
) -> str:
    """Create a regex pattern for matching variations of a token."""
    regex = ''
    if not include_substrings:
        regex += r'(^|\W)'

    for index, char in enumerate(tok):
        char_variations = char_set.get(char)
        if char_variations is None:
            char_variations = [char]

        regex += '['
        for char_variation in char_variations:
            regex += re.escape(char_variation)
        regex += ']'

        if index < len(tok) - 1:
            regex += r'(,.+/|&%#!@_)*'

    if include_plural:
        s_variations = char_set.get('s', ['s'])
        regex += '['
        for s_variation in s_variations:
            regex += re.escape(s_variation)
        regex += ']?'

    if not include_substrings:
        regex += r'(\W|$)'

    return regex


def regex_multiple(substrs: bool, *strs: str) -> List[re.Pattern[str]]:
    """Create multiple regex patterns."""
    regs: List[re.Pattern[str]] = []
    for s in strs:
        regs.append(regex(s, False, substrs))
    return regs


def regex(tok: str, include_plural: bool, include_substrings: bool) -> re.Pattern[str]:
    """Create a compiled regex pattern for matching token variations."""
    return re.compile(create_censorize_regex(tok, include_plural, include_substrings, lookalikes))


space_chars_regex = re.compile(r'[*∗٭ꭈ𐌟]')
underlines_regex = re.compile('[\u035a-\u035f]')


def remove_space_chars(text: str) -> str:
    """Remove space-like characters from text."""
    return space_chars_regex.sub('', text)


def remove_underlines(text: str) -> str:
    """Remove combining marks (underlines) from text. Example would be b_i_t_c_h or f___u___c___k turning into bitch or fuck."""
    output: List[str] = []
    for char in text:
        if not unicodedata.category(char).startswith('Mn'):
            output.append(char)
    return ''.join(output)


def remove_single_quotes(text: str) -> str:
    """Remove single quotes from text."""
    return text.replace("'", '')


def remove_zero_width_space(text: str) -> str:
    """Remove zero-width spaces from text."""
    text = text.replace('\u200b', '')
    text = text.replace('\u200e', '')
    return text


def clean(text: str) -> str:
    """Clean text by removing zero-width spaces and underlines."""
    text = remove_zero_width_space(text)
    text = remove_underlines(text)
    return text


class CleanStringArguments(ArgumentsBase):
    s: str
    zero_width: bool = True
    underlines: bool = True
    space_likes: bool = False
    single_quotes: bool = False


class CleanString(UDFBase[CleanStringArguments, str]):
    def execute(self, execution_context: ExecutionContext, arguments: CleanStringArguments) -> str:
        s = arguments.s
        if arguments.zero_width:
            s = remove_zero_width_space(s)
        if arguments.underlines:
            s = remove_underlines(s)
        if arguments.space_likes:
            s = remove_space_chars(s)
        if arguments.single_quotes:
            s = remove_single_quotes(s)
        return s
