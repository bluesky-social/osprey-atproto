// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: bus.proto

package bus

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enums for the constants (optional, but recommended for type safety)
type EventKind int32

const (
	EventKind_EVENT_KIND_UNSPECIFIED EventKind = 0
	EventKind_EVENT_KIND_COMMIT      EventKind = 1
	EventKind_EVENT_KIND_ACCOUNT     EventKind = 2
	EventKind_EVENT_KIND_IDENTITY    EventKind = 3
)

// Enum value maps for EventKind.
var (
	EventKind_name = map[int32]string{
		0: "EVENT_KIND_UNSPECIFIED",
		1: "EVENT_KIND_COMMIT",
		2: "EVENT_KIND_ACCOUNT",
		3: "EVENT_KIND_IDENTITY",
	}
	EventKind_value = map[string]int32{
		"EVENT_KIND_UNSPECIFIED": 0,
		"EVENT_KIND_COMMIT":      1,
		"EVENT_KIND_ACCOUNT":     2,
		"EVENT_KIND_IDENTITY":    3,
	}
)

func (x EventKind) Enum() *EventKind {
	p := new(EventKind)
	*p = x
	return p
}

func (x EventKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventKind) Descriptor() protoreflect.EnumDescriptor {
	return file_bus_proto_enumTypes[0].Descriptor()
}

func (EventKind) Type() protoreflect.EnumType {
	return &file_bus_proto_enumTypes[0]
}

func (x EventKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventKind.Descriptor instead.
func (EventKind) EnumDescriptor() ([]byte, []int) {
	return file_bus_proto_rawDescGZIP(), []int{0}
}

type CommitOperation int32

const (
	CommitOperation_COMMIT_OPERATION_UNSPECIFIED CommitOperation = 0
	CommitOperation_COMMIT_OPERATION_CREATE      CommitOperation = 1
	CommitOperation_COMMIT_OPERATION_UPDATE      CommitOperation = 2
	CommitOperation_COMMIT_OPERATION_DELETE      CommitOperation = 3
)

// Enum value maps for CommitOperation.
var (
	CommitOperation_name = map[int32]string{
		0: "COMMIT_OPERATION_UNSPECIFIED",
		1: "COMMIT_OPERATION_CREATE",
		2: "COMMIT_OPERATION_UPDATE",
		3: "COMMIT_OPERATION_DELETE",
	}
	CommitOperation_value = map[string]int32{
		"COMMIT_OPERATION_UNSPECIFIED": 0,
		"COMMIT_OPERATION_CREATE":      1,
		"COMMIT_OPERATION_UPDATE":      2,
		"COMMIT_OPERATION_DELETE":      3,
	}
)

func (x CommitOperation) Enum() *CommitOperation {
	p := new(CommitOperation)
	*p = x
	return p
}

func (x CommitOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommitOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_bus_proto_enumTypes[1].Descriptor()
}

func (CommitOperation) Type() protoreflect.EnumType {
	return &file_bus_proto_enumTypes[1]
}

func (x CommitOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommitOperation.Descriptor instead.
func (CommitOperation) EnumDescriptor() ([]byte, []int) {
	return file_bus_proto_rawDescGZIP(), []int{1}
}

type FirehoseEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Did           string                 `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Kind          EventKind              `protobuf:"varint,3,opt,name=kind,proto3,enum=bus.EventKind" json:"kind,omitempty"`
	Commit        *Commit                `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
	Account       []byte                 `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`   // comatproto.SyncSubscribeRepos_Account as opaque bytes
	Identity      []byte                 `protobuf:"bytes,6,opt,name=identity,proto3" json:"identity,omitempty"` // comatproto.SyncSubscribeRepos_Identity as opaque bytes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirehoseEvent) Reset() {
	*x = FirehoseEvent{}
	mi := &file_bus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirehoseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirehoseEvent) ProtoMessage() {}

func (x *FirehoseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_bus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirehoseEvent.ProtoReflect.Descriptor instead.
func (*FirehoseEvent) Descriptor() ([]byte, []int) {
	return file_bus_proto_rawDescGZIP(), []int{0}
}

func (x *FirehoseEvent) GetDid() string {
	if x != nil {
		return x.Did
	}
	return ""
}

func (x *FirehoseEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *FirehoseEvent) GetKind() EventKind {
	if x != nil {
		return x.Kind
	}
	return EventKind_EVENT_KIND_UNSPECIFIED
}

func (x *FirehoseEvent) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *FirehoseEvent) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *FirehoseEvent) GetIdentity() []byte {
	if x != nil {
		return x.Identity
	}
	return nil
}

type Commit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rev           string                 `protobuf:"bytes,1,opt,name=rev,proto3" json:"rev,omitempty"`
	Operation     CommitOperation        `protobuf:"varint,2,opt,name=operation,proto3,enum=bus.CommitOperation" json:"operation,omitempty"`
	Collection    string                 `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	Rkey          string                 `protobuf:"bytes,4,opt,name=rkey,proto3" json:"rkey,omitempty"`
	Record        []byte                 `protobuf:"bytes,5,opt,name=record,proto3" json:"record,omitempty"` // json.RawMessage as opaque bytes
	Cid           string                 `protobuf:"bytes,6,opt,name=cid,proto3" json:"cid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Commit) Reset() {
	*x = Commit{}
	mi := &file_bus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_bus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_bus_proto_rawDescGZIP(), []int{1}
}

func (x *Commit) GetRev() string {
	if x != nil {
		return x.Rev
	}
	return ""
}

func (x *Commit) GetOperation() CommitOperation {
	if x != nil {
		return x.Operation
	}
	return CommitOperation_COMMIT_OPERATION_UNSPECIFIED
}

func (x *Commit) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *Commit) GetRkey() string {
	if x != nil {
		return x.Rkey
	}
	return ""
}

func (x *Commit) GetRecord() []byte {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *Commit) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type Cursor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequence      int64                  `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	SavedOnExit   bool                   `protobuf:"varint,2,opt,name=saved_on_exit,json=savedOnExit,proto3" json:"saved_on_exit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cursor) Reset() {
	*x = Cursor{}
	mi := &file_bus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cursor) ProtoMessage() {}

func (x *Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_bus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cursor.ProtoReflect.Descriptor instead.
func (*Cursor) Descriptor() ([]byte, []int) {
	return file_bus_proto_rawDescGZIP(), []int{2}
}

func (x *Cursor) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Cursor) GetSavedOnExit() bool {
	if x != nil {
		return x.SavedOnExit
	}
	return false
}

var File_bus_proto protoreflect.FileDescriptor

const file_bus_proto_rawDesc = "" +
	"\n" +
	"\tbus.proto\x12\x03bus\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf2\x01\n" +
	"\rFirehoseEvent\x12\x18\n" +
	"\x03did\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x03did\x12@\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\ttimestamp\x12*\n" +
	"\x04kind\x18\x03 \x01(\x0e2\x0e.bus.EventKindB\x06\xbaH\x03\xc8\x01\x01R\x04kind\x12#\n" +
	"\x06commit\x18\x04 \x01(\v2\v.bus.CommitR\x06commit\x12\x18\n" +
	"\aaccount\x18\x05 \x01(\fR\aaccount\x12\x1a\n" +
	"\bidentity\x18\x06 \x01(\fR\bidentity\"\xac\x01\n" +
	"\x06Commit\x12\x10\n" +
	"\x03rev\x18\x01 \x01(\tR\x03rev\x122\n" +
	"\toperation\x18\x02 \x01(\x0e2\x14.bus.CommitOperationR\toperation\x12\x1e\n" +
	"\n" +
	"collection\x18\x03 \x01(\tR\n" +
	"collection\x12\x12\n" +
	"\x04rkey\x18\x04 \x01(\tR\x04rkey\x12\x16\n" +
	"\x06record\x18\x05 \x01(\fR\x06record\x12\x10\n" +
	"\x03cid\x18\x06 \x01(\tR\x03cid\"H\n" +
	"\x06Cursor\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\x03R\bsequence\x12\"\n" +
	"\rsaved_on_exit\x18\x02 \x01(\bR\vsavedOnExit*o\n" +
	"\tEventKind\x12\x1a\n" +
	"\x16EVENT_KIND_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11EVENT_KIND_COMMIT\x10\x01\x12\x16\n" +
	"\x12EVENT_KIND_ACCOUNT\x10\x02\x12\x17\n" +
	"\x13EVENT_KIND_IDENTITY\x10\x03*\x8a\x01\n" +
	"\x0fCommitOperation\x12 \n" +
	"\x1cCOMMIT_OPERATION_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17COMMIT_OPERATION_CREATE\x10\x01\x12\x1b\n" +
	"\x17COMMIT_OPERATION_UPDATE\x10\x02\x12\x1b\n" +
	"\x17COMMIT_OPERATION_DELETE\x10\x03BF\n" +
	"\acom.busB\bBusProtoP\x01Z\x05/;bus\xa2\x02\x03BXX\xaa\x02\x03Bus\xca\x02\x03Bus\xe2\x02\x0fBus\\GPBMetadata\xea\x02\x03Busb\x06proto3"

var (
	file_bus_proto_rawDescOnce sync.Once
	file_bus_proto_rawDescData []byte
)

func file_bus_proto_rawDescGZIP() []byte {
	file_bus_proto_rawDescOnce.Do(func() {
		file_bus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bus_proto_rawDesc), len(file_bus_proto_rawDesc)))
	})
	return file_bus_proto_rawDescData
}

var file_bus_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bus_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bus_proto_goTypes = []any{
	(EventKind)(0),                // 0: bus.EventKind
	(CommitOperation)(0),          // 1: bus.CommitOperation
	(*FirehoseEvent)(nil),         // 2: bus.FirehoseEvent
	(*Commit)(nil),                // 3: bus.Commit
	(*Cursor)(nil),                // 4: bus.Cursor
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_bus_proto_depIdxs = []int32{
	5, // 0: bus.FirehoseEvent.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: bus.FirehoseEvent.kind:type_name -> bus.EventKind
	3, // 2: bus.FirehoseEvent.commit:type_name -> bus.Commit
	1, // 3: bus.Commit.operation:type_name -> bus.CommitOperation
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bus_proto_init() }
func file_bus_proto_init() {
	if File_bus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bus_proto_rawDesc), len(file_bus_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bus_proto_goTypes,
		DependencyIndexes: file_bus_proto_depIdxs,
		EnumInfos:         file_bus_proto_enumTypes,
		MessageInfos:      file_bus_proto_msgTypes,
	}.Build()
	File_bus_proto = out.File
	file_bus_proto_goTypes = nil
	file_bus_proto_depIdxs = nil
}
